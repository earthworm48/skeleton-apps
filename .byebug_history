exit
params
exit
@user.reset_digest
@user.rest_digest
@user
exit
User.first
 @user = User.find_by(email: params[:password_reset][:email].downcase)
params[:password_reset][:email]
params
exit
edit_account_activation_path(user.activation_token, email: user.email)
user.activation_token
user.email
user
exit
c
params
user
user.activated?
c
user.activated?
c
user.activated?
user
exit
User.where(activated: true).paginate(page: params[:page])
a
User.where(activated: true).paginate(page: params[:page])
User.paginate(page:params[:page]).where(activated: true)
User.paginate(page:params[:page]).find_by(activated: true)
User.find_by(activated: true).paginate(page: params[:page])
User.find_by(actovated: true).paginate(page: params[:page])
activated_user.paginate(page: params[:page])
activated_user.paginate(page: params[:page)
activated_user = User.find_by(activated: true)
User.find_by(activated: true)
User.find_by(:activated, true)
exit
@user
@user.remember
remember(@user)
@user
exit
c
attribute.class
exit
attribute.class
attribute
exit
params
c
exit
logged_in?
c
session[:forwarding_url]
c
session[:forwarding_url]
c
session[:forwarding_url]
request.get?
c
request.get?
request.url
session[:forwarding_url]
c
n
c
request.url
request.get?
c
defined?(options)
defined?(redirect_to)
defined?(if)
defined?(follow_redirect)
defined?(follow_redirect!)
defined?(post_via_redirect)
defined(post_via_redirect)
defined(redirect_to)
integration_test?
exit
params[:session][:remember_me] == '0'
params[:session][:remember_me] == 0
params[:session][:remember_me] == 1
params[:session][:remember_me]
params[:sessions][:remember_me]
params
exit
c
self.remember_token
remember_token
User.new_token
c
remember user
exit
self
exit
session(:user_id)
session
session.delete(:user_id)
params
user_id
exit
Bcrypt::Password.create(string, cost: cost)
c
exit
Bcrypt::Password.create(string, cost: cost)
